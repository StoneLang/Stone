
space Syntax.Template {

	public any<T> interface Queue {
		fun Add(const T* t) -> void;
		fun Pop() -> *T;
	}

	public any<T> struct PriorityQueue : Queue<T> {
		private T[] entries; 
	}
	public PriorityQueue::PriorityQueue() {
	}
	public PriorityQueue::~PriorityQueue() {
	}

	public fun PriorityQueue::Add(const T* t) -> void {
	}
	public fun PriorityQueue::Pop() -> T* {
	}
}

