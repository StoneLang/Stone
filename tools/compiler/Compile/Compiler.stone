module Stone.Compile; 

using Stone.Session; 

space Stone.Compile {

	class Compiler : Session {
		Module* md = null;
		ASTContext* ast = null; 
	}	
	init fun Compiler::Init() {
		md = new Module(); 
		ast = new ASTContext(); 
	}
	defer fun Compiler::Defer() {
		free ast;
		free md;
	}
	public fun Compiler::Build() -> i32 {
		return 0; 
	}
	public fun Compiler::GetModule() -> Module* {
		return md;
	}

}



