use Stone.Session;
use Stone.Syntax;
use Stone.Basic; 

space Stone.Frontend {

	public struct Compiler : Session {
		///
		private Basic* basic = null;
		///
		private CompilerOptions* compilerOpts = null; 
		///
		private Module* mainModule = null;

	}

	public Compiler::this(Basic* basic) {
			this.basic = basic; 
			this.compilerOpts = new CompilerOptions(); 
			this.mainModule = new Module(); 
	}
	public Compiler::~this() {
			if(mainModule) { 
				free mainModule;
			}
	}
	public fun Compiler::Run() -> void {
	}

	public fun Compiler::GetBasic() -> Basic* {
		return basic; 
	}
}
